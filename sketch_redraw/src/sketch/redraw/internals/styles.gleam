import redraw.{type Component}
import sketch/css.{type Class}

/// Represents the `<style>` node generated to inject the styles generated by Sketch.
pub type Node

/// Creates a `<style>` node in the document, and injects it at the end of
/// `document.head`. Returns the node at the end.
@external(javascript, "./styles.ffi.mjs", "createNode")
pub fn create_node() -> Node

/// Injects the `content` string in the `<style>` node.
@external(javascript, "./styles.ffi.mjs", "dump")
pub fn dump(style: Node, content: String) -> Nil

/// Creates the styled function from `factory` if it does not exists.
/// Otherwise, returns the existing `factory` function specialized for the tag.
@external(javascript, "./styles.ffi.mjs", "cache")
pub fn cache(tag: String, value: fn(a) -> Component) -> fn(a) -> Component

/// Extracts the props generated from `styled` function.
/// Extracts `as` and `styles`, and the new props without them.
@external(javascript, "./styles.ffi.mjs", "extractFrom")
pub fn extract_from(props: props) -> #(String, Class, props)
